make -C ./enclave/
make[1]: Entering directory '/root/sgx/samplecode/pktransfer/enclave'
cargo build --release
warning: Patch `sgx_cov v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_cov)` was not used in the crate graph.
Patch `sgx_crypto_helper v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_crypto_helper)` was not used in the crate graph.
Patch `sgx_rand v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_rand)` was not used in the crate graph.
Patch `sgx_rand_derive v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_rand_derive)` was not used in the crate graph.
Patch `sgx_serialize v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_serialize)` was not used in the crate graph.
Patch `sgx_serialize_derive v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_serialize_derive)` was not used in the crate graph.
Patch `sgx_serialize_derive_internals v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_serialize_derive_internals)` was not used in the crate graph.
Patch `sgx_tcrypto_helper v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_tcrypto_helper)` was not used in the crate graph.
Patch `sgx_tdh v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_tdh)` was not used in the crate graph.
Patch `sgx_tkey_exchange v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_tkey_exchange)` was not used in the crate graph.
Patch `sgx_tunittest v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_tunittest)` was not used in the crate graph.
Patch `sgx_ucrypto v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_ucrypto)` was not used in the crate graph.
Patch `sgx_urts v1.1.3 (/root/sgx/incubator-teaclave-sgx-sdk-master/sgx_urts)` was not used in the crate graph.
Check that the patched package version and available features are compatible
with the dependency requirements. If the patch has a different version from
what is locked in the Cargo.lock file, run `cargo update` to use the new
version. This may also occur with an optional dependency that is not enabled.
   Compiling Pktransferenclave v1.0.0 (/root/sgx/samplecode/pktransfer/enclave)
warning: unused import: `self`
 --> src/data.rs:8:15
  |
8 | use std::io::{self, Read, Write};
  |               ^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `sgx_types::marker::ContiguousMemory`
  --> src/merkletree.rs:12:5
   |
12 | use sgx_types::marker::ContiguousMemory;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::string::String`
  --> src/lib.rs:46:5
   |
46 | use std::string::String;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `Read`
  --> src/lib.rs:48:21
   |
48 | use std::io::{self, Read, Write};
   |                     ^^^^

warning: unused import: `error`
  --> src/lib.rs:54:18
   |
54 | use ring::{aead, error};
   |                  ^^^^^

warning: unused variable: `time_since_reset`
   --> src/data.rs:166:9
    |
166 |     let mut time_since_reset = data.timestamp - curr_time;
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_time_since_reset`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `response`
  --> src/time.rs:49:9
   |
49 |     let response = RequestBuilder::new(&addr)
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`

warning: unused variable: `response`
  --> src/time.rs:97:9
   |
97 |     let response = RequestBuilder::new(&addr)
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_response`

warning: variable does not need to be mutable
   --> src/data.rs:163:9
    |
163 |     let mut data: Database = serde_cbor::from_slice(encoded_slice).unwrap();
    |         ----^^^^
    |         |
    |         help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: variable does not need to be mutable
   --> src/data.rs:166:9
    |
166 |     let mut time_since_reset = data.timestamp - curr_time;
    |         ----^^^^^^^^^^^^^^^^
    |         |
    |         help: remove this `mut`

warning: associated function is never used: `len`
  --> src/crypto.rs:51:12
   |
51 |     pub fn len(&self) -> usize {
   |            ^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: associated function is never used: `public_key`
  --> src/crypto.rs:86:12
   |
86 |     pub fn public_key(&self, pubkey: &SgxRsaPubKey) -> sgx_status_t {
   |            ^^^^^^^^^^

warning: function is never used: `encrypt_rsa`
   --> src/crypto.rs:240:8
    |
240 | pub fn encrypt_rsa(plaintext: &[u8], ciphertext: &mut [u8], pubkey: SgxRsaPubKey) -> sgx_status_t {
    |        ^^^^^^^^^^^

warning: variant is never constructed: `Other`
  --> src/data.rs:26:5
   |
26 |     Other
   |     ^^^^^

warning: struct is never constructed: `RetreiveEntry`
  --> src/data.rs:39:12
   |
39 | pub struct RetreiveEntry
   |            ^^^^^^^^^^^^^

warning: 15 warnings emitted

    Finished release [optimized] target(s) in 11.20s
cp ./target/release/libpktransferenclave.a ../lib/libenclave.a
make[1]: Leaving directory '/root/sgx/samplecode/pktransfer/enclave'
LINK =>  enclave/enclave.so
mkdir -p bin
tcs_num 1, tcs_max_num 1, tcs_min_pool 1
The required memory is 3952640B.
The required memory is 0x3c5000, 3860 KB.
Succeed.
<!-- Please refer to User's Guide for the explanation of each field -->
<EnclaveConfiguration>
    <ProdID>0</ProdID>
    <ISVSVN>0</ISVSVN>
    <StackMaxSize>0x40000</StackMaxSize>
    <HeapMaxSize>0x100000</HeapMaxSize>
    <TCSNum>1</TCSNum>
    <TCSPolicy>1</TCSPolicy>
    <DisableDebug>0</DisableDebug>
    <MiscSelect>0</MiscSelect>
    <MiscMask>0xFFFFFFFF</MiscMask>
</EnclaveConfiguration>
SIGN =>  bin/enclave.signed.so
